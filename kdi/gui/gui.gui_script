function init(self)
    -- Add initialization code here
    -- Remove this function if not needed
	self.fw_node = gui.get_node("followers")
	self.pt_node = gui.get_node("patrons")
	math.randomseed(os.time())
	self.fw = math.random(5000,8000);
	self.pt = math.random(1000,3000);
	self.freq = 1;
	self.currentTime = 0;
	
	redraw(self)
end

function final(self)
    -- Add finalization code here
    -- Remove this function if not needed
end

function scale_down(self, node)
	local s = 1.0
	gui.animate(node, gui.PROP_SCALE, vmath.vector4(s, s, s, 0), gui.EASING_OUT, 0.1)
end

function redraw(self, fw, pt)
	local s = 1.3
    
    -- print("redraw");
    
    gui.set_text(self.pt_node, tostring(self.pt))
    gui.set_text(self.fw_node, tostring(self.fw))
	
	
	if fw then
		gui.animate(self.fw_node, gui.PROP_SCALE, vmath.vector4(s, s, s, 0), gui.EASING_OUT, 0.5, 0.0, scale_down)
	end
	
	if pt then
		gui.animate(self.pt_node, gui.PROP_SCALE, vmath.vector4(s, s, s, 0), gui.EASING_OUT, 0.5, 0.0, scale_down)
	end
end



function update(self, dt)
	self.currentTime = self.currentTime + dt;
	if self.currentTime > self.freq then
		self.currentTime = 0;
		fw = false;
		pt = false;
		
			
		if math.random() > 0.5 then
			fw = true;
		else
			pt = true;
		end
		
		if fw then
			self.fw = self.fw + math.random(100,500);
		end
		
		if pt then
			self.pt = self.pt + math.random(100,500);
		end
		redraw(self, fw, pt);
	end
end

function on_message(self, message_id, message, sender)
    -- Add message-handling code here
    -- Remove this function if not needed
end

function on_input(self, action_id, action)
    -- Add input-handling code here
    -- Remove this function if not needed
end

function on_reload(self)
    -- Add input-handling code here
    -- Remove this function if not needed
end
